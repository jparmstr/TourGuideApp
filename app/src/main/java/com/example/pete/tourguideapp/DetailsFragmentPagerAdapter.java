package com.example.pete.tourguideapp;

import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.util.Log;

class DetailsFragmentPagerAdapter extends FragmentPagerAdapter {

    private static final int NUMBER_OF_PAGES = 2;

    private Place.PlaceTypes type;
    private String placeName;
    private String tabTitles[];
    private boolean showCheckedInIndicators;

    // The FragmentPagerAdapter assigns tags like android:switcher:2131230934:1, interfering with my Back behaviors
    // We need to be able to identify the fragments generated by this adapter so that we know which Place List screen to return to
    // This bug randomly fixed itself, seemingly.

    DetailsFragmentPagerAdapter(Context context, FragmentManager fm, Place.PlaceTypes type, String placeName, boolean showCheckedInIndicators) {
        super(fm);

        String placeDetailsTitle = "Info";
        String categoryDetailsTitle = "";

        this.type = type;

        this.placeName = placeName;

        switch (type) {
            case PARK:
                categoryDetailsTitle = context.getResources().getString(R.string.header_trails);
                break;
            case LANDMARK:
                categoryDetailsTitle = context.getResources().getString(R.string.header_history);
                break;
            case RESTAURANT:
                categoryDetailsTitle = context.getResources().getString(R.string.header_type_of_food);
                break;
            case VENUE:
                categoryDetailsTitle = context.getResources().getString(R.string.header_events);
                break;
        }

        tabTitles = new String[]{placeDetailsTitle, categoryDetailsTitle};

        this.showCheckedInIndicators = showCheckedInIndicators;
    }

    @Override
    public Fragment getItem(int position) {
        switch (position) {
            case 0:
                Fragment placeDetailsFragment = new DetailsPlaceFragment();

                // Put extra data into the fragment
                // This data will be acted on by the details fragment class
                Bundle bundlePlace = new Bundle();
                bundlePlace.putString("name", placeName);
                bundlePlace.putBoolean("showCheckedInIndicators", showCheckedInIndicators);
                placeDetailsFragment.setArguments(bundlePlace);

                return placeDetailsFragment;
            // Break statements are not needed after return
            case 1:
                Fragment categoryDetailsFragment = null;

                switch (type) {
                    case PARK:
                        categoryDetailsFragment = new DetailsParkFragment();
                        break;
                    case LANDMARK:
                        categoryDetailsFragment = new DetailsLandmarkFragment();
                        break;
                    case RESTAURANT:
                        categoryDetailsFragment = new DetailsRestaurantFragment();
                        break;
                    case VENUE:
                        categoryDetailsFragment = new DetailsVenueFragment();
                        break;
                }

                // Put extra data into the fragment
                // This data will be acted on by the details fragment class
                Bundle bundle = new Bundle();
                bundle.putString("name", placeName);
                categoryDetailsFragment.setArguments(bundle);

                return categoryDetailsFragment;
            default:
                Log.d("DetailsFragmentPagerAda", "Unknown DetailsFragmentPagerAdapter.getItem() position.");
                return null;
        }
    }

    @Override
    public int getCount() {
        return NUMBER_OF_PAGES;
    }

    @Override
    public CharSequence getPageTitle(int position) {
        return tabTitles[position];
    }

}